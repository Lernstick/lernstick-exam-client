#!/bin/bash

. /var/lib/lernstick-exam-client/functions.sh

c="$(config_value "keylogger_keymap")"
keymap="${c:-"en_US"}"

c="$(config_value "keylogger_path")"
path="${c:-"/home/user/ScreenCapture"}"

chunk="10" # in seconds
while true; do
  # find the keymap file from the currently running Xorg process
  if [ "${keymap}" = "auto" ]; then
    pid="$(pgrep Xorg)"
    [ "$?" = 1 ] && exit 1 # exit the script when the keymap cannot be determined
    export $(strings /proc/${pid}/environ | grep -P "^LANG=" | head -1)
    keymap="${LANG%%.*}"
  fi

  # fall back if keymap does not exist
  if [ ! -r "/usr/share/logkeys/keymaps/${keymap}.map" ]; then
    keymap="--us-keymap" # default keymap
  else
    keymap="--keymap /usr/share/logkeys/keymaps/${keymap}.map"
  fi
  mkdir -p "${path}"
  cd "${path}"

  logkeys --start --no-daemon --no-timestamps $keymap -o - | while read -n1 char; do
    # outputs enclosed in square brackets like <enter> should be on one line
    if [ "$char" = "<" ]; then
        concat="yes"
    fi

    if [ "${concat-no}" = "yes" ]; then
        string="${string}${char}"
    elif [ "${concat-no}" = "no" ]; then
        echo "${string}${char}"
        string=""
    fi

    if [ "$char" = ">" ]; then
        concat="no"
        echo "${string}"
        string=""
    fi
  done | while IFS= read -r line; do
    # add correct millisecondtimestamp to the line and store it in the file named by the timestamp
    date="${date-$(date +%s)}"
    now="$(date +%s)"
    expire=$(expr $date + $chunk)

    if [ "$now" -gt "$expire" ]; then
        date="${now}"
    fi
    echo "$(date +%s%3N) $line" >> "${path}/keylogger${date}.key"
  done
done
